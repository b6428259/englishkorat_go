# UAT environment compose (separate from production)
services:
  api:
    image: b6428259/englishkorat:${IMAGE_TAG:-uat}
    container_name: englishkorat-api-uat
    env_file:
      - ./.env
    environment:
      - APP_ENV=uat
      - STAGE=uat
      - PORT=3000
      - AWS_REGION=${AWS_REGION}
      - REDIS_HOST=redis-uat
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - USE_SSM=false
      - USE_REDIS_NOTIFICATIONS=true
      - SKIP_MIGRATE=true
      - PRUNE_COLUMNS=false
      - LOG_ARCHIVE_DAYS=7d
      - LOG_CACHE_TTL=24h
      - LOG_LEVEL=info
      - LOG_FILE=logs/app.log
      - MAX_FILE_SIZE=10485760
      - ALLOWED_EXTENSIONS=jpg,jpeg,png,webp,gif
      - LINE_CHANNEL_SECRET=${LINE_CHANNEL_SECRET}
      - LINE_CHANNEL_ACCESS_TOKEN=${LINE_CHANNEL_ACCESS_TOKEN}
    depends_on:
      - redis-uat
    ports:
      - "3000:3000"  # Expose UAT on different host port
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "-", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  redis-uat:
    image: redis:7-alpine
    container_name: ekorat-redis-uat
    ports:
      - "6380:6380"  # Expose UAT Redis on port 6380 to match REDIS_PORT used by the app
    # Run Redis listening on 6380 so container-to-container connections to redis-uat:6380 succeed
    command: ["redis-server", "--port", "6380", "--requirepass", "${REDIS_PASSWORD}"]
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: 6380
    volumes:
      - redis_ekorat_uat:/data
    restart: unless-stopped

  phpmyadmin-uat:
    image: phpmyadmin:5-apache
    container_name: ekorat-phpmyadmin-uat
    environment:
      PMA_HOST: ${PMA_HOST}
      PMA_USER: ${PMA_USER}
      PMA_PASSWORD: ${PMA_PASSWORD}
      UPLOAD_LIMIT: 256M
    ports:
      - "8080:80"
    restart: unless-stopped

volumes:
  redis_ekorat_uat:
