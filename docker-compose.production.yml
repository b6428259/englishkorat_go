version: "3.9"

# Production compose file (no inline aws cli calls inside containers)
# Secrets are resolved on the EC2 host via deploy/generate-env.sh into .env

services:
  api:
    image: b6428259/englishkorat:${IMAGE_TAG:-latest}
    container_name: englishkorat-api
    env_file:
      - ./.env
    environment:
      APP_ENV: production
      PORT: 3000
      AWS_REGION: ${AWS_REGION}
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    depends_on:
      - redis
    ports:
      - "3000:3000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "-", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: ekorat-redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin:5-apache
    container_name: ekorat-phpmyadmin
    environment:
      PMA_HOST: ${PMA_HOST}
      PMA_USER: ${PMA_USER}
      PMA_PASSWORD: ${PMA_PASSWORD}
      UPLOAD_LIMIT: 256M
    ports:
      - "8080:80"
    restart: unless-stopped

volumes:
  redis_data:
